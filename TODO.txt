TODO:

move Watson client methods from quando_browser to their own module
move watson server methods from server.js """""""

must add system to allow for failure states for puzzles (BIG)

optimize ar model loading (BIG)
    --- using Draco compression lib?
        --- q - does user have to compress models, should quando do it on upload?
        --- try optimizing Jupiter myself, see if it's worth doing

add loading screen to AR bits (MID)

make TTS unique per user (MID)
    ---append the :userid to the filename

---DONE---- redesign AR blocks (MID)

---DONE---- VISREC pipe camera feed to API (BIG)
---NOT GONNA DO---- add animations (NOPE)

---DONE---- alter showGLTF methods to allow for multiple markers
---DONE---- add stuff other than 3d models to marker - image (flat, vertical, facing camera??), video(sames), text(same actually damn) (BIG)

---KINDA DONE---- add puzzle building blocks - will take form of WHEN(event) blocks
---DONE---- onScan, can't think of any other simple ones rn
---DONE---- inventory system & tests added
---DONE---- puzzle tracking system added
---DONE---- deploy on IBM Cloud

---DONE---- NOTE: alright, so custom markers work now, but they must be referenced as
---DONE---- live url's, not as relative files stored on the server.

---DONE---- now need to create library of custom markers and pattern files,
---DONE---- letters chosen instead of numbers, mostly unique looking 
---DONE---- host them on github

GEN NOTES:
npm install --unsafe-perm --global leveldown